name: Java CI with Maven and SonarQube

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        run: mvn -B package -DskipTests --file pom.xml

  security-check:
    runs-on: ubuntu-latest
	
	steps:
	- uses: actions/checkout@v4
	
	- name: Trivy Installation
	  run: |
		sudo apt-get install -y wget apt-transport-https gnupg lsb-release
		wget -qO - https://aquasecurity.github.io/trivy-repo/deb/public.key | sudo apt-key add -
		echo deb https://aquasecurity.github.io/trivy-repo/deb $(lsb_release -sc) main | sudo tee -a /etc/apt/sources.list.d/trivy.list
		sudo apt-get update -y
		sudo apt-get install -y trivy

	- name: Trivy FS Scan
	  run: trivy fs --format table -o fs-report.json .

	- name: Gitleaks Installation
	  run: sudo apt install gitleaks -y
	- name: Gitleaks Code Scan
	  run: gitleaks detect source . -r gitleaks-report.json -f json
	  
  test:
    name: Test
    runs-on: ubuntu-latest
    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: maven

      - name: Run JUnit Tests
        run: mvn clean test

  sonarqube:
    name: SonarQube Analysis
    runs-on: ubuntu-latest
    needs: test
  
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
  
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
  
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
  
      - name: Build and SonarCloud Scan with Maven
        run: |
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=prashantchauhan226_SpringMVCHibernate \
            -Dsonar.organization=prashantchauhan226 \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
